% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu_deaths.r
\name{simu_deaths}
\alias{simu_deaths}
\title{Simulation of survival data set}
\usage{
simu_deaths(time, prob, n)
}
\arguments{
\item{time}{time points at which survival is evaluated.}

\item{prob}{survival probability density function.}

\item{n}{number of individuals to simulate.}
}
\value{
\code{data.frame} with two columns named \code{Death} and \code{Event}.
The former yields the \code{time} of the event and the latter is the status
indicates, i.e. dead (\code{Event=1}) or alive (i.e. \code{Event=0}).
}
\description{
It simulates a data set of right-censored n individuals for a
given survival function.
}
\details{
To be completed.
}
\examples{

## Simulating one random sample data from the survival function.
time <- 0:100
prob <- exp(-time*.05)
n <- 10
x <- simu_deaths(time,prob,n)

## Inverse approach: approximating the survival function from simulations.
## We build a more complicated survival function, one which is not sampled
## regularly and has flat parts.
time <- c(1,3,4,8,9,12:17)
prob <- c(1,1,1,.9,.8,.8,.7,.5,.2,.2,.2)
n <- 10
nrep <- 100
y <- NULL
for (i in 1:nrep) {
z <- simu_deaths(time,prob,n)
y <- c(y,z$Death[z$Event==1])
}
p <- sapply(time,function(i) sum(y==i))
p <- cumsum(p)
r <- lm(prob~p)
par(mfcol=c(2,1),mar=c(3,4,3,2))
plot(time,predict(r),xlab="Time",ylab="Survival",ylim=c(0,1))
points(time,prob,type="l",lwd=2)
plot(time,prob-predict(r),xlab="Time",ylab="Differences")
par(mfcol=c(1,1))

}
